#:import ListItemButton kivy.uix.listview.ListItemButton
#:import ListAdapter kivy.adapters.listadapter.ListAdapter
#:import MDTextField kivymd.textfields.MDTextField
#:import Toolbar kivymd.toolbar.Toolbar
#:import ThemeManager kivymd.theming.ThemeManager
#:import MDNavigationDrawer kivymd.navigationdrawer.MDNavigationDrawer
#:import NavigationLayout kivymd.navigationdrawer.NavigationLayout
#:import NavigationDrawerDivider kivymd.navigationdrawer.NavigationDrawerDivider
#:import NavigationDrawerToolbar kivymd.navigationdrawer.NavigationDrawerToolbar
#:import NavigationDrawerSubheader kivymd.navigationdrawer.NavigationDrawerSubheader
#:import MDCheckbox kivymd.selectioncontrols.MDCheckbox
#:import MDSwitch kivymd.selectioncontrols.MDSwitch
#:import MDList kivymd.list.MDList
#:import OneLineListItem kivymd.list.OneLineListItem
#:import TwoLineListItem kivymd.list.TwoLineListItem
#:import ThreeLineListItem kivymd.list.ThreeLineListItem
#:import OneLineAvatarListItem kivymd.list.OneLineAvatarListItem
#:import OneLineIconListItem kivymd.list.OneLineIconListItem
#:import OneLineAvatarIconListItem kivymd.list.OneLineAvatarIconListItem
#:import MDTextField kivymd.textfields.MDTextField
#:import MDSpinner kivymd.spinner.MDSpinner
#:import MDCard kivymd.card.MDCard
#:import MDSeparator kivymd.card.MDSeparator
#:import MDDropdownMenu kivymd.menu.MDDropdownMenu
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import colors kivymd.color_definitions.colors
#:import SmartTile kivymd.grid.SmartTile
#:import MDSlider kivymd.slider.MDSlider
#:import MDTabbedPanel kivymd.tabs.MDTabbedPanel
#:import MDTab kivymd.tabs.MDTab
#:import MDProgressBar kivymd.progressbar.MDProgressBar
#:import MDAccordion kivymd.accordion.MDAccordion
#:import MDAccordionItem kivymd.accordion.MDAccordionItem
#:import MDAccordionSubItem kivymd.accordion.MDAccordionSubItem
#:import MDThemePicker kivymd.theme_picker.MDThemePicker
#:import MDBottomNavigation kivymd.tabs.MDBottomNavigation
#:import MDBottomNavigationItem kivymd.tabs.MDBottomNavigationItem


CreatePasswordForm:

<CreatePasswordForm@BoxLayout>:
    id: passwordlayout

    #makes things allign on the screen vertically instead of horizontally
    orientation: "vertical"

    # top toolbar
    Toolbar:
        id: toolbar
        title: 'Password Generator'
        md_bg_color: app.theme_cls.primary_color
        background_palette: 'Primary'
        background_hue: '500'
        left_action_items: [['menu', lambda x: app.root.toggle_nav_drawer()]]
        right_action_items: [['dots-vertical', lambda x: app.root.toggle_nav_drawer()]]

    # buffer since toolbar doesn't seem to properly assert it's size
    BoxLayout:
        size: dp(5), dp(5)

    # first card w/ original password and data1
    MDCard:
        padding: 10
        size_hint: None, None
        size: dp(600), dp(75)
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        BoxLayout:
            # original password field
            MDTextField:
                id: originalpassword
                hint_text: "Original Password"
                on_text:passwordlayout.updateTextOne(originalpassword.text, miscdata1.text, 0), passwordlayout.updateTextTwo(hashoutput.text, miscdata2.text, 1)
            Image:
                source: "plus.png"
            # Random data field
            MDTextField:
                id: miscdata1
                hint_text: "Random Data 1"
                on_text:passwordlayout.updateTextOne(originalpassword.text, miscdata1.text, 0), passwordlayout.updateTextTwo(hashoutput.text, miscdata2.text, 1)

    # Downward arrow for flow between cards
    BoxLayout:
        padding: 10
        Image:
            source: "down_arrow.png"
            height: dp(30)  # The fixed height you want

    # Centerd hash selector button
    AnchorLayout:
        anchor_x: 'center'
        anchor_y: 'center'
        MDRaisedButton:
            size_hint: None, None
            size: 3 * dp(48), dp(48)
            text: 'MD5'
            opposite_colors: True
            #pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            # loads menu_items from main.py for the drop down list
            on_release: MDDropdownMenu(items=app.hash_one_items, width_mult=4).open(self)

    # Downward arrow for flow between cards
    BoxLayout:
        padding: 10
        Image:
            source: "down_arrow.png"
            height: dp(30)  # The fixed height you want

    # intermediate hash and data2
    MDCard:
        padding: 10
        size_hint: None, None
        size: dp(600), dp(75)
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        BoxLayout:
            # Intermediate hash label
            Label:
                font_size: 20
                id: hashoutput
                color: .7, .7, .7, 1
                center_x: root.width / 2
                text: "hash"
            Image:
                source: "plus.png"
            # random data 2 field
            MDTextField:
                id: miscdata2
                hint_text: "Random Data 2"
                on_text:passwordlayout.updateTextTwo(hashoutput.text, miscdata2.text, 1)

    # down arrow for card flow
    BoxLayout:
        padding: 10
        Image:
            source: "down_arrow.png"
            height: dp(30)  # The fixed height you want

    # centered hash selector button
    AnchorLayout:
        anchor_x: 'center'
        anchor_y: 'center'
        MDRaisedButton:
            id: "hashselector2"
            size_hint: None, None
            size: 3 * dp(48), dp(48)
            text: 'MD5'
            opposite_colors: True
            #pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            on_release: MDDropdownMenu(items=app.hash_two_items, width_mult=2).open(self)

    # flow arrow
    BoxLayout:
        padding: 10
        Image:
            source: "down_arrow.png"
            height: dp(30)  # The fixed height you want

    # Result card and copy to clipboard
    MDCard:
        padding: 10
        size_hint: None, None
        size: dp(600), dp(75)
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        # result
        Label:
            font_size: 20
            color: .7, .7, .7, 1
            center_x: root.width / 2
            text: "result"
            id: newpassword
        # copy to clipboard button
        MDRaisedButton:
            size_hint: None, None
            size: 3 * dp(48), dp(48)
            text: 'Copy to Clipboard'
            opposite_colors: True
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            # on_release: MDDropdownMenu(items=app.menu_items, width_mult=2).open(self)


